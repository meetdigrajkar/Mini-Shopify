{"version":3,"sources":["services/UserService.js","components/FormField.js","components/TopMenu.js","redux/actionTypes.js","redux/actions.js","components/CreateAccount.js","components/SignIn.js","components/Shop.js","components/Home.js","components/Main.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","data","a","post","then","response","authenticate","merchantAdded","message","error","React","Component","TopMenu","props","className","this","title","SET_AUTHENTICATE","setAuthenticated","flag","type","payload","isAuthenticated","theme","createMuiTheme","spacing","CreateAccount","state","username","name","number","email","password","redirectToSignIn","showPassword","registrationFailed","handleSubmit","bind","toggleVisibility","visibility","setState","obj","success","console","log","UserService","createAccount","isRegistered","toast","dismissible","pauseOnHover","style","backgroundColor","teal","to","pathname","Grid","container","component","height","onClick","Typography","variant","paddingBottom","alignSelf","Tooltip","src","width","marginTop","noValidate","action","undefined","flexGrow","sm","item","paddingRight","TextField","InputProps","startAdornment","InputAdornment","position","htmlColor","value","onChange","event","target","margin","fullWidth","label","required","autoFocus","paddingLeft","helperText","id","autoComplete","endAdornment","IconButton","color","Button","padding","borderRadius","connect","SignIn","handleMouseDownPassword","preventDefault","authenticateFailed","redirectToCreateAccount","authenticateMerchant","authenticateResponse","Shop","shops","test","getByID","getShops","shopidvalue","temp","find","shop","shopID","parseInt","class","placeholder","map","description","shopItems","Home","users","signOut","getUsers","user","Main","prevProps","nextState","process","path","exact","render","createStore","require","initialState","store","newState","serializedState","localStorage","getItem","JSON","parse","loadFromLocalStorage","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","setItem","saveToLocalStorage","getState","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d0967aa.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst USERS_REST_API_URL = \"api/merchants\";\r\nconst CREATE_USER_REST_API_URL = \"api/addMerchant\";\r\nconst AUTHENTICATE_REST_API_URL = \"api/authenticate\";\r\nconst GET_ALL_SHOPS_URL = \"api/getShops\";\r\nconst GET_SHOP_BY_ID_URL = \"api/getShopById\";\r\n\r\nclass UserService {\r\n  getUsers() {\r\n    return axios.get(USERS_REST_API_URL);\r\n  }\r\n\r\n  getShopById() {\r\n    return axios.get(GET_SHOP_BY_ID_URL);\r\n  }\r\n\r\n  getShops() {\r\n    return axios.get(GET_ALL_SHOPS_URL);\r\n  }\r\n\r\n  async createAccount(data) {\r\n    return await axios.post(CREATE_USER_REST_API_URL, data).then(\r\n      (response) => {\r\n        if (response && response.data) {\r\n          return [\r\n            response.data.authenticate && response.data.merchantAdded,\r\n            response.data.message,\r\n          ];\r\n        }\r\n        return [false, \"Unable to create an account!\"];\r\n      },\r\n      (error) => {\r\n        return [false, \"Unable to create an account!\"];\r\n      }\r\n    );\r\n  }\r\n\r\n  async authenticateMerchant(data) {\r\n    return await axios.post(AUTHENTICATE_REST_API_URL, data).then(\r\n      (response) => {\r\n        if (response && response.data) {\r\n          return response.data.authenticate;\r\n        }\r\n        return false;\r\n      },\r\n      (error) => {\r\n        return false;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React from \"react\";\r\nimport \"react-bulma-components/dist/react-bulma-components.min.css\";\r\n\r\nclass FormField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"field\">\r\n        <label className=\"label\">{this.props.label}</label>\r\n        <div className=\"control\">\r\n          <input\r\n            value={this.props.value}\r\n            onChange={this.props.onChange}\r\n            className=\"input\"\r\n            type={this.props.type === undefined ? \"input\" : this.props.type}\r\n            required={this.props.required ? false : true}\r\n            placeholder={this.props.placeholder}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormField;\r\n","import React from \"react\";\r\nimport { Box, Section } from \"react-bulma-components\";\r\nimport \"react-bulma-components/dist/react-bulma-components.min.css\";\r\n\r\nclass TopMenu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Section className=\"has-background-black-ter\">\r\n          <Box>\r\n            <h1 className=\"title\">Mini Shopify</h1>\r\n            <p className=\"subtitle\">{this.props.title}</p>\r\n          </Box>\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopMenu;\r\n","export const SET_AUTHENTICATE = \"SET_AUTHENTICATE\";\r\n","import { SET_AUTHENTICATE } from \"./actionTypes\";\r\n\r\nexport const setAuthenticated = (flag) => ({\r\n  type: SET_AUTHENTICATE,\r\n  payload: {\r\n    isAuthenticated: flag,\r\n  },\r\n});\r\n","import React from \"react\";\r\n// import { Section, Box, Button } from \"react-bulma-components\";\r\n// import \"react-bulma-components/dist/react-bulma-components.min.css\";\r\nimport UserService from \"../services/UserService\";\r\nimport FormField from \"./FormField\";\r\nimport TopMenu from \"./TopMenu\";\r\nimport { Redirect } from \"react-router\";\r\nimport { toast } from \"bulma-toast\";\r\nimport {\r\n  Avatar,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  FormControlLabel,\r\n  TextField,\r\n  Button,\r\n  Link,\r\n  Box,\r\n  Checkbox,\r\n  Tooltip,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { blue, grey, teal } from \"@material-ui/core/colors\";\r\nimport {\r\n  createMuiTheme,\r\n  makeStyles,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAuthenticated } from \"../redux/actions\";\r\n\r\nconst theme = createMuiTheme({\r\n  spacing: [0, 4, 8, 16, 32, 64],\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { isAuthenticated: state.isAuthenticated };\r\n};\r\n\r\nclass CreateAccount extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      name: \"\",\r\n      number: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      redirectToSignIn: false,\r\n      showPassword: false,\r\n      registrationFailed: false,\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.toggleVisibility = this.toggleVisibility.bind(this);\r\n  }\r\n\r\n  toggleVisibility() {\r\n    const visibility = this.state.showPassword;\r\n    this.setState({ showPassword: !visibility });\r\n  }\r\n\r\n  async handleSubmit() {\r\n    var obj = {\r\n      username: this.state.username,\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n    var [success, message] = [false, \"Please enter username and password.\"];\r\n\r\n    console.log(obj);\r\n\r\n    if (obj.username !== \"\" && obj.password !== \"\") {\r\n      [success, message] = await UserService.createAccount(obj);\r\n\r\n      if (success) {\r\n        this.setState({ isRegistered: true });\r\n        this.props.setAuthenticated(true);\r\n      } else {\r\n        this.setState({ registrationFailed: true });\r\n      }\r\n    }\r\n\r\n    toast({\r\n      message: success\r\n        ? \"Account successfully registered.\"\r\n        : \"Account Already Exists. Please try again with a different username or email.\",\r\n      type: success ? \"is-primary\" : \"is-danger\",\r\n      dismissible: true,\r\n      pauseOnHover: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ backgroundColor: teal[50] }}>\r\n        {this.state.redirectToSignIn && (\r\n          <Redirect to={{ pathname: \"/sign-in\" }} />\r\n        )}\r\n\r\n        {this.props.isAuthenticated && <Redirect to={{ pathname: \"/\" }} />}\r\n\r\n        <Grid container component=\"main\" style={{ height: \"100vh\" }}>\r\n          <div className=\"LeftGridPhoto\" />\r\n          <div className=\"RightGrid\">\r\n            <div className=\"AuthPlacement\">\r\n              <p>\r\n                Already have an account?\r\n                <a\r\n                  className=\"AuthRedirectLink\"\r\n                  onClick={() => this.setState({ redirectToSignIn: true })}\r\n                >\r\n                  Sign In\r\n                </a>\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"SignInGrid\">\r\n              <div className=\"AuthDescriptionBox\">\r\n                <div className=\"AuthDescription\">\r\n                  <Typography\r\n                    component=\"h1\"\r\n                    variant=\"h5\"\r\n                    style={{ paddingBottom: \"10px\", alignSelf: \"start\" }}\r\n                  >\r\n                    Create your account on MiniShopify\r\n                  </Typography>\r\n\r\n                  <Typography\r\n                    component=\"h1\"\r\n                    variant=\"subtitle1\"\r\n                    style={{ paddingBottom: \"10px\", alignSelf: \"flex-start\" }}\r\n                  >\r\n                    Enter your details below.\r\n                  </Typography>\r\n                </div>\r\n\r\n                <div>\r\n                  <Tooltip title=\"Firebase\">\r\n                    <img\r\n                      className=\"FireboxImg\"\r\n                      src=\"/static/icons/firebase.png\"\r\n                    />\r\n                  </Tooltip>\r\n                </div>\r\n              </div>\r\n              <form\r\n                style={{ width: \"100%\", marginTop: \"1px\" }}\r\n                noValidate\r\n                action={undefined}\r\n              >\r\n                <Grid container style={{ flexGrow: 1 }}>\r\n                  <Grid sm={6} item style={{ paddingRight: \"10px\" }}>\r\n                    <TextField\r\n                      InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            <AssignmentIndIcon htmlColor=\"rgb(0, 171, 85)\" />\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                      value={this.state.name}\r\n                      onChange={(event) =>\r\n                        this.setState({ name: event.target.value })\r\n                      }\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      required\r\n                      autoFocus\r\n                    />\r\n                  </Grid>\r\n                  <Grid sm={6} item style={{ paddingLeft: \"10px\" }}>\r\n                    <TextField\r\n                      helperText={\r\n                        this.state.registrationFailed\r\n                          ? \"Account Already Exists\"\r\n                          : \"\"\r\n                      }\r\n                      InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            <AccountCircle htmlColor=\"rgb(0, 171, 85)\" />\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                      value={this.state.username}\r\n                      onChange={(event) =>\r\n                        this.setState({ username: event.target.value })\r\n                      }\r\n                      error={this.state.registrationFailed}\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      label=\"Username\"\r\n                      name=\"username\"\r\n                      required\r\n                      autoFocus\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <TextField\r\n                  helperText={\r\n                    this.state.registrationFailed\r\n                      ? \"Account Already Exists\"\r\n                      : \"\"\r\n                  }\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <EmailIcon htmlColor=\"rgb(0, 171, 85)\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  value={this.state.email}\r\n                  onChange={(event) =>\r\n                    this.setState({ email: event.target.value })\r\n                  }\r\n                  error={this.state.registrationFailed}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  required\r\n                  autoFocus\r\n                />\r\n\r\n                <TextField\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton onClick={this.toggleVisibility}>\r\n                          {this.state.showPassword ? (\r\n                            <Visibility htmlColor=\"rgb(0, 171, 85)\" />\r\n                          ) : (\r\n                            <VisibilityOff htmlColor=\"rgb(0, 171, 85)\" />\r\n                          )}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  value={this.state.password}\r\n                  onChange={(event) =>\r\n                    this.setState({ password: event.target.value })\r\n                  }\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  label=\"Password\"\r\n                  type={this.state.showPassword ? \"text\" : \"password\"}\r\n                  required\r\n                  autoComplete=\"current-password\"\r\n                />\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{\r\n                    padding: \"10px\",\r\n                    margin: theme.spacing(3, 0, 2),\r\n                    backgroundColor: \"rgb(0, 171, 85)\",\r\n                    borderRadius: \"12px\",\r\n                  }}\r\n                  onClick={this.handleSubmit}\r\n                >\r\n                  Register\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setAuthenticated })(CreateAccount);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport UserService from \"../services/UserService\";\r\nimport FormField from \"./FormField\";\r\nimport TopMenu from \"./TopMenu\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAuthenticated } from \"../redux/actions\";\r\nimport {\r\n  Avatar,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  FormControlLabel,\r\n  TextField,\r\n  Button,\r\n  Link,\r\n  Box,\r\n  Checkbox,\r\n  Tooltip,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport {\r\n  createMuiTheme,\r\n  makeStyles,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport { blue, grey, teal } from \"@material-ui/core/colors\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { toast } from \"bulma-toast\";\r\nimport \"../styling/styles.css\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { isAuthenticated: state.isAuthenticated };\r\n};\r\n\r\nconst theme = createMuiTheme({\r\n  spacing: [0, 4, 8, 16, 32, 64],\r\n});\r\n\r\nclass SignIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      authenticateFailed: false,\r\n      redirectToCreateAccount: false,\r\n      showPassword: false,\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.toggleVisibility = this.toggleVisibility.bind(this);\r\n  }\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   if (\r\n  //     nextState.username !== this.state.username ||\r\n  //     nextState.password !== this.state.password ||\r\n  //     nextProps.isAuthenticated !== this.props.isAuthenticated ||\r\n  //     nextState.authenticateFailed !== this.state.authenticateFailed ||\r\n  //     nextState.redirectToCreateAccount !== this.state.redirectToCreateAccount ||\r\n  //     nextState.toggle\r\n  //   ) {\r\n  //     return true;\r\n  //   }\r\n  //   return false;\r\n  // }\r\n\r\n  async handleSubmit() {\r\n    var obj = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    var authenticateResponse = await UserService.authenticateMerchant(obj);\r\n\r\n    if (!authenticateResponse) {\r\n      this.setState({ authenticateFailed: true });\r\n    } else {\r\n      toast({\r\n        message: \"Welcome back \" + obj.username + \"!\",\r\n        type: \"is-primary\",\r\n        dismissible: true,\r\n        pauseOnHover: true,\r\n      });\r\n    }\r\n\r\n    this.props.setAuthenticated(authenticateResponse);\r\n  }\r\n\r\n  toggleVisibility() {\r\n    const visibility = this.state.showPassword;\r\n    this.setState({ showPassword: !visibility });\r\n  }\r\n\r\n  handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ backgroundColor: teal[50] }}>\r\n        {this.state.redirectToCreateAccount && (\r\n          <Redirect to={{ pathname: \"/create-account\" }} />\r\n        )}\r\n\r\n        {this.props.isAuthenticated && <Redirect to={{ pathname: \"/\" }} />}\r\n\r\n        <Grid container component=\"main\" style={{ height: \"100vh\" }}>\r\n          <div className=\"LeftGridPhoto\" />\r\n          <div className=\"RightGrid\">\r\n            <div className=\"AuthPlacement\">\r\n              <p>\r\n                Don't have an account?\r\n                <a\r\n                  className=\"AuthRedirectLink\"\r\n                  onClick={() =>\r\n                    this.setState({ redirectToCreateAccount: true })\r\n                  }\r\n                >\r\n                  Get started\r\n                </a>\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"SignInGrid\">\r\n              <div className=\"AuthDescriptionBox\">\r\n                <div className=\"AuthDescription\">\r\n                  <Typography\r\n                    component=\"h1\"\r\n                    variant=\"h5\"\r\n                    style={{ paddingBottom: \"10px\", alignSelf: \"start\" }}\r\n                  >\r\n                    Sign in to MiniShopify\r\n                  </Typography>\r\n\r\n                  <Typography\r\n                    component=\"h1\"\r\n                    variant=\"subtitle1\"\r\n                    style={{ paddingBottom: \"10px\", alignSelf: \"flex-start\" }}\r\n                  >\r\n                    Enter your details below.\r\n                  </Typography>\r\n                </div>\r\n\r\n                <div>\r\n                  <Tooltip title=\"Firebase\">\r\n                    <img\r\n                      className=\"FireboxImg\"\r\n                      src=\"/static/icons/firebase.png\"\r\n                    />\r\n                  </Tooltip>\r\n                </div>\r\n              </div>\r\n              {/* <Alert severity=\"info\" variant=\"filled\">\r\n                <p>\r\n                  Use username : test / password : test\r\n                </p>\r\n              </Alert> */}\r\n              <form\r\n                style={{ width: \"100%\", marginTop: \"1px\" }}\r\n                noValidate\r\n                action={undefined}\r\n              >\r\n                <TextField\r\n                  helperText={\r\n                    this.state.authenticateFailed ? \"Invalid Input.\" : \"\"\r\n                  }\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <AccountCircle htmlColor=\"rgb(0, 171, 85)\" />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  value={this.state.username}\r\n                  onChange={(event) =>\r\n                    this.setState({ username: event.target.value })\r\n                  }\r\n                  error={this.state.authenticateFailed}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  required\r\n                  autoFocus\r\n                  style={{ borderRadius: \"12px\" }}\r\n                />\r\n\r\n                <TextField\r\n                  helperText={\r\n                    this.state.authenticateFailed ? \"Invalid Input.\" : \"\"\r\n                  }\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton onClick={this.toggleVisibility}>\r\n                          {this.state.showPassword ? (\r\n                            <Visibility htmlColor=\"rgb(0, 171, 85)\" />\r\n                          ) : (\r\n                            <VisibilityOff htmlColor=\"rgb(0, 171, 85)\" />\r\n                          )}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  value={this.state.password}\r\n                  onChange={(event) =>\r\n                    this.setState({ password: event.target.value })\r\n                  }\r\n                  error={this.state.authenticateFailed}\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  label=\"Password\"\r\n                  type={this.state.showPassword ? \"text\" : \"password\"}\r\n                  required\r\n                  autoComplete=\"current-password\"\r\n                  style={{ borderRadius: \"20px\" }}\r\n                />\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{\r\n                    padding: \"10px\",\r\n                    margin: theme.spacing(3, 0, 2),\r\n                    backgroundColor: \"rgb(0, 171, 85)\",\r\n                    borderRadius: \"12px\",\r\n                  }}\r\n                  onClick={this.handleSubmit}\r\n                >\r\n                  Sign In\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setAuthenticated })(SignIn);\r\n","import React from \"react\";\r\nimport UserService from \"../services/UserService\";\r\nimport \"react-bulma-components/dist/react-bulma-components.min.css\";\r\nimport { Box, Button } from \"react-bulma-components\";\r\nimport TopMenu from \"./TopMenu\";\r\n\r\nclass Shop extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shops: [],\r\n    };\r\n\r\n    this.test = this.test.bind(this);\r\n    this.getByID = this.getByID.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.test();\r\n  }\r\n\r\n  test() {\r\n    UserService.getShops().then((response) => {\r\n      this.setState({ shops: response.data });\r\n    });\r\n  }\r\n\r\n  getByID() {\r\n    const value = this.state.shopidvalue;\r\n    const temp = this.state.shops.find(\r\n      (shop) => shop.shopID === parseInt(value)\r\n    );\r\n    console.log(temp);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TopMenu title={\"Shops\"} />\r\n\r\n        <Box className=\"box has-text-white has-background-black-ter\">\r\n          <div class=\"field\">\r\n            <div class=\"control\">\r\n              <input\r\n                class=\"input\"\r\n                type=\"text\"\r\n                placeholder=\"Search by Merchant ID\"\r\n                onChange={(event) =>\r\n                  this.setState({ shopidvalue: event.target.value })\r\n                }\r\n              ></input>\r\n              <Button onClick={this.getByID} className=\"is-primary\">\r\n                Search\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Box>\r\n        <h1> Shops Table </h1>\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <td> Shop Name </td>\r\n              <td> Shop Description </td>\r\n              <td> Shop ID </td>\r\n              <td> Shop Items </td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.shops.map((shop) => (\r\n              <tr key={shop.shopID}>\r\n                <td> {shop.name} </td>\r\n                <td> {shop.description} </td>\r\n                <td> {shop.shopID} </td>\r\n                <td> {shop.shopItems} </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Shop;\r\n","import React from \"react\";\r\nimport UserService from \"../services/UserService\";\r\nimport TopMenu from \"./TopMenu\";\r\nimport { Box, Section, Button } from \"react-bulma-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAuthenticated } from \"../redux/actions\";\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n    };\r\n\r\n    this.test = this.test.bind(this);\r\n    this.signOut = this.signOut.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.test();\r\n  }\r\n\r\n  test() {\r\n    UserService.getUsers().then((response) => {\r\n      this.setState({ users: response.data });\r\n    });\r\n  }\r\n\r\n  signOut() {\r\n    this.props.setAuthenticated(false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TopMenu title=\"Home Page\" />\r\n        <Button onClick={this.signOut} className=\"is-primary\">\r\n          Sign Out\r\n        </Button>\r\n        <h1> USERS TABLE </h1>\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <td> Username </td>\r\n              <td> Name </td>\r\n              <td> Number </td>\r\n              <td> Email </td>\r\n              <td> Password </td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.users.map((user) => (\r\n              <tr key={user.id}>\r\n                <td> {user.username} </td>\r\n                <td> {user.name} </td>\r\n                <td> {user.number} </td>\r\n                <td> {user.email} </td>\r\n                <td> {user.password} </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setAuthenticated })(Home);\r\n","import React from \"react\";\r\nimport \"react-bulma-components/dist/react-bulma-components.min.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport CreateAccount from \"./CreateAccount\";\r\nimport SignIn from \"./SignIn\";\r\nimport Shop from \"./Shop\";\r\nimport Home from \"./Home\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { isAuthenticated: state.isAuthenticated };\r\n};\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidUpdate(prevProps, nextState) {}\r\n\r\n  componentDidMount() {\r\n    // Temporary\r\n    // To figure out env settings\r\n    console.log(\"deployment setting: \", process.env);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/sign-in\" exact component={() => <SignIn />} />\r\n\r\n            <Route path=\"/create-account\" component={() => <CreateAccount />} />\r\n\r\n            <Route\r\n              path=\"/home\"\r\n              component={() =>\r\n                this.props.isAuthenticated ? (\r\n                  <Home />\r\n                ) : (\r\n                  <Redirect to=\"/sign-in\" />\r\n                )\r\n              }\r\n            />\r\n\r\n            <Route\r\n              path=\"/shop\"\r\n              component={() =>\r\n                this.props.isAuthenticated ? (\r\n                  <Shop />\r\n                ) : (\r\n                  <Redirect to=\"/sign-in\" />\r\n                )\r\n              }\r\n            />\r\n\r\n            <Route\r\n              render={() => {\r\n                return this.props.isAuthenticated ? (\r\n                  <Redirect to=\"/home\" />\r\n                ) : (\r\n                  <Redirect to=\"/sign-in\" />\r\n                );\r\n              }}\r\n            />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(Main);\r\n","import { SET_AUTHENTICATE } from \"./actionTypes\";\r\nconst { createStore } = require(\"redux\");\r\n\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (error) {\r\n    console.log(error);\r\n    return undefined;\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n};\r\n\r\nconst myReducer = (state = initialState, action) => {\r\n  const newState = { ...state };\r\n\r\n  if (action.type === SET_AUTHENTICATE) {\r\n    newState.isAuthenticated = action.payload.isAuthenticated;\r\n  }\r\n\r\n  return newState;\r\n};\r\n\r\nconst persistedState = loadFromLocalStorage();\r\n\r\nconst store = createStore(\r\n  myReducer,\r\n  persistedState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n\r\nexport default store;\r\n","import \"./App.css\";\r\nimport Main from \"./components/Main\";\r\nimport \"react-app-polyfill/stable\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <Main />\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}