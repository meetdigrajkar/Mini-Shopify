{"version":3,"sources":["services/UserService.js","components/FormField.js","components/TopMenu.js","components/CreateAccount.js","redux/actionTypes.js","redux/actions.js","components/SignIn.js","components/Shop.js","components/Home.js","components/Main.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","data","a","post","then","response","authenticate","merchantAdded","message","error","FormField","props","state","className","this","label","value","onChange","type","undefined","required","placeholder","React","Component","TopMenu","title","CreateAccount","username","name","number","email","password","redirectToSignIn","handleSubmit","bind","obj","success","UserService","createAccount","toast","dismissible","pauseOnHover","to","pathname","style","textAlign","event","setState","target","onClick","SET_AUTHENTICATE","setAuthenticated","flag","payload","isAuthenticated","SignIn","authenticateFailed","redirectToCreateAccount","nextProps","nextState","authenticateMerchant","authenticateResponse","connect","Shop","shops","test","getByID","getShops","shopidvalue","temp","find","shop","shopID","parseInt","console","log","class","map","description","shopItems","Home","users","signOut","getUsers","user","id","Main","prevProps","process","path","exact","component","render","createStore","require","initialState","store","action","newState","serializedState","localStorage","getItem","JSON","parse","loadFromLocalStorage","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","setItem","saveToLocalStorage","getState","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.389396ba.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst USERS_REST_API_URL = \"api/merchants\";\r\nconst CREATE_USER_REST_API_URL = \"api/addMerchant\";\r\nconst AUTHENTICATE_REST_API_URL = \"api/authenticate\";\r\nconst GET_ALL_SHOPS_URL = \"api/getShops\";\r\nconst GET_SHOP_BY_ID_URL = \"api/getShopById\";\r\n\r\nclass UserService {\r\n  getUsers() {\r\n    return axios.get(USERS_REST_API_URL);\r\n  }\r\n\r\n  getShopById() {\r\n    return axios.get(GET_SHOP_BY_ID_URL);\r\n  }\r\n\r\n  getShops() {\r\n    return axios.get(GET_ALL_SHOPS_URL);\r\n  }\r\n\r\n  async createAccount(data) {\r\n    return await axios.post(CREATE_USER_REST_API_URL, data).then(\r\n      (response) => {\r\n        if (response && response.data) {\r\n          return [\r\n            response.data.authenticate && response.data.merchantAdded,\r\n            response.data.message,\r\n          ];\r\n        }\r\n        return [false, \"Unable to create an account!\"];\r\n      },\r\n      (error) => {\r\n        return [false, \"Unable to create an account!\"];\r\n      }\r\n    );\r\n  }\r\n\r\n  async authenticateMerchant(data) {\r\n    return await axios.post(AUTHENTICATE_REST_API_URL, data).then(\r\n      (response) => {\r\n        if (response && response.data) {\r\n          return response.data.authenticate;\r\n        }\r\n        return false;\r\n      },\r\n      (error) => {\r\n        return false;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React from \"react\";\r\nimport \"react-bulma-components/dist/react-bulma-components.min.css\";\r\n\r\nclass FormField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"field\">\r\n        <label className=\"label\">{this.props.label}</label>\r\n        <div className=\"control\">\r\n          <input\r\n            value={this.props.value}\r\n            onChange={this.props.onChange}\r\n            className=\"input\"\r\n            type={this.props.type === undefined ? \"input\" : this.props.type}\r\n            required={this.props.required ? false : true}\r\n            placeholder={this.props.placeholder}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormField;\r\n","import React from \"react\";\r\nimport { Box, Section } from \"react-bulma-components\";\r\nimport \"react-bulma-components/dist/react-bulma-components.min.css\";\r\n\r\nclass TopMenu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Section className=\"has-background-black-ter\">\r\n          <Box>\r\n            <h1 className=\"title\">Mini Shopify</h1>\r\n            <p className=\"subtitle\">{this.props.title}</p>\r\n          </Box>\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopMenu;\r\n","import React from \"react\";\r\nimport { Section, Box, Button } from \"react-bulma-components\";\r\nimport \"react-bulma-components/dist/react-bulma-components.min.css\";\r\nimport UserService from \"../services/UserService\";\r\nimport FormField from \"./FormField\";\r\nimport TopMenu from \"./TopMenu\";\r\nimport { Redirect } from \"react-router\";\r\nimport {toast} from 'bulma-toast'\r\n\r\nclass CreateAccount extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      name: \"\",\r\n      number: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      redirectToSignIn: false,\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  async handleSubmit() {\r\n    var obj = {\r\n      username: this.state.username,\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n    var [success, message] = [false, \"Please enter username and password.\"]\r\n\r\n    if(obj.username !== \"\" && obj.password !== \"\"){\r\n        [success, message] = await UserService.createAccount(obj);\r\n    }\r\n\r\n    toast({\r\n      message: message,\r\n      type: success ? 'is-primary' : 'is-danger',\r\n      dismissible: true,\r\n      pauseOnHover: true,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.redirectToSignIn && (\r\n          <Redirect to={{ pathname: \"/sign-in\" }} />\r\n        )}\r\n\r\n        <TopMenu title={\"Create your account!\"} />\r\n\r\n        <Section style={{ textAlign: \"left\" }}>\r\n          <Box className=\"has-background-black-ter\">\r\n            <Box>\r\n              <FormField\r\n                label=\"Username\"\r\n                value={this.state.username}\r\n                onChange={(event) =>\r\n                  this.setState({ username: event.target.value })\r\n                }\r\n                placeholder={\"e.g. username\"}\r\n              />\r\n\r\n              <FormField\r\n                label=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(event) =>\r\n                  this.setState({ name: event.target.value })\r\n                }\r\n                placeholder={\"name\"}\r\n              />\r\n\r\n              <FormField\r\n                label=\"Number\"\r\n                value={this.state.number}\r\n                onChange={(event) =>\r\n                  this.setState({ number: event.target.value })\r\n                }\r\n                placeholder={\"number\"}\r\n              />\r\n\r\n              <FormField\r\n                label=\"Email\"\r\n                value={this.state.email}\r\n                onChange={(event) =>\r\n                  this.setState({ email: event.target.value })\r\n                }\r\n                placeholder={\"email\"}\r\n              />\r\n\r\n              <FormField\r\n                label=\"Password\"\r\n                value={this.state.password}\r\n                onChange={(event) =>\r\n                  this.setState({ password: event.target.value })\r\n                }\r\n                type=\"password\"\r\n                placeholder={\"**********\"}\r\n              />\r\n\r\n              <Button onClick={this.handleSubmit} className=\"is-primary\">\r\n                Create Account\r\n              </Button>\r\n            </Box>\r\n\r\n            <a\r\n              onClick={() => this.setState({ redirectToSignIn: true })}\r\n              className=\"has-text-white\"\r\n            >\r\n              If you already have an account, click here to sign in.\r\n            </a>\r\n          </Box>\r\n        </Section>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateAccount;\r\n","export const SET_AUTHENTICATE = \"SET_AUTHENTICATE\";\r\n","import { SET_AUTHENTICATE } from \"./actionTypes\";\r\n\r\nexport const setAuthenticated = (flag) => ({\r\n  type: SET_AUTHENTICATE,\r\n  payload: {\r\n    isAuthenticated: flag,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { Box, Section, Button } from \"react-bulma-components\";\r\nimport \"react-bulma-components/dist/react-bulma-components.min.css\";\r\nimport { Redirect } from \"react-router\";\r\nimport UserService from \"../services/UserService\";\r\nimport FormField from \"./FormField\";\r\nimport TopMenu from \"./TopMenu\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAuthenticated } from \"../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { isAuthenticated: state.isAuthenticated };\r\n};\r\n\r\nclass SignIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      authenticateFailed: false,\r\n      redirectToCreateAccount: false,\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (\r\n      nextState.username !== this.state.username ||\r\n      nextState.password !== this.state.password ||\r\n      nextProps.isAuthenticated !== this.props.isAuthenticated ||\r\n      nextState.authenticateFailed !== this.state.authenticateFailed ||\r\n      nextState.redirectToCreateAccount !== this.state.redirectToCreateAccount\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  async handleSubmit() {\r\n    var obj = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    var authenticateResponse = await UserService.authenticateMerchant(obj);\r\n\r\n    if (!authenticateResponse) {\r\n      this.setState({ authenticateFailed: true });\r\n    }\r\n\r\n    this.props.setAuthenticated(authenticateResponse);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.redirectToCreateAccount && (\r\n          <Redirect to={{ pathname: \"/create-account\" }} />\r\n        )}\r\n\r\n        {this.props.isAuthenticated && <Redirect to={{ pathname: \"/\" }} />}\r\n\r\n        <TopMenu title={\"Sign In\"} />\r\n\r\n        <Section style={{ textAlign: \"left\" }}>\r\n          <Box className=\"has-background-black-ter\">\r\n            <Box>\r\n              {this.state.authenticateFailed && (\r\n                <label className=\"label has-text-danger\">\r\n                  Invalid username and password!\r\n                </label>\r\n              )}\r\n\r\n              <FormField\r\n                label=\"Username\"\r\n                value={this.state.username}\r\n                onChange={(event) =>\r\n                  this.setState({ username: event.target.value })\r\n                }\r\n                placeholder={\"e.g. username\"}\r\n              />\r\n\r\n              <FormField\r\n                label=\"Password\"\r\n                value={this.state.password}\r\n                type=\"password\"\r\n                onChange={(event) =>\r\n                  this.setState({ password: event.target.value })\r\n                }\r\n                placeholder={\"********\"}\r\n              />\r\n\r\n              <Button onClick={this.handleSubmit} className=\"is-primary\">\r\n                Sign In\r\n              </Button>\r\n            </Box>\r\n\r\n            <a\r\n              onClick={() => this.setState({ redirectToCreateAccount: true })}\r\n              className=\"has-text-white\"\r\n            >\r\n              Click here to create an account\r\n            </a>\r\n          </Box>\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setAuthenticated })(SignIn);\r\n","import React from \"react\";\r\nimport UserService from \"../services/UserService\";\r\nimport \"react-bulma-components/dist/react-bulma-components.min.css\";\r\nimport { Box, Button } from \"react-bulma-components\";\r\nimport TopMenu from \"./TopMenu\";\r\n\r\nclass Shop extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shops: [],\r\n    };\r\n\r\n    this.test = this.test.bind(this);\r\n    this.getByID = this.getByID.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.test();\r\n  }\r\n\r\n  test() {\r\n    UserService.getShops().then((response) => {\r\n      this.setState({ shops: response.data });\r\n    });\r\n  }\r\n\r\n  getByID() {\r\n    const value = this.state.shopidvalue;\r\n    const temp = this.state.shops.find(\r\n      (shop) => shop.shopID === parseInt(value)\r\n    );\r\n    console.log(temp);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TopMenu title={\"Shops\"} />\r\n\r\n        <Box className=\"box has-text-white has-background-black-ter\">\r\n          <div class=\"field\">\r\n            <div class=\"control\">\r\n              <input\r\n                class=\"input\"\r\n                type=\"text\"\r\n                placeholder=\"Search by Merchant ID\"\r\n                onChange={(event) =>\r\n                  this.setState({ shopidvalue: event.target.value })\r\n                }\r\n              ></input>\r\n              <Button onClick={this.getByID} className=\"is-primary\">\r\n                Search\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Box>\r\n        <h1> Shops Table </h1>\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <td> Shop Name </td>\r\n              <td> Shop Description </td>\r\n              <td> Shop ID </td>\r\n              <td> Shop Items </td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.shops.map((shop) => (\r\n              <tr key={shop.shopID}>\r\n                <td> {shop.name} </td>\r\n                <td> {shop.description} </td>\r\n                <td> {shop.shopID} </td>\r\n                <td> {shop.shopItems} </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Shop;\r\n","import React from \"react\";\r\nimport UserService from \"../services/UserService\";\r\nimport TopMenu from \"./TopMenu\";\r\nimport { Box, Section, Button } from \"react-bulma-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAuthenticated } from \"../redux/actions\";\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n    };\r\n\r\n    this.test = this.test.bind(this);\r\n    this.signOut = this.signOut.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.test();\r\n  }\r\n\r\n  test() {\r\n    UserService.getUsers().then((response) => {\r\n      this.setState({ users: response.data });\r\n    });\r\n  }\r\n\r\n  signOut() {\r\n    this.props.setAuthenticated(false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TopMenu title=\"Home Page\" />\r\n        <Button onClick={this.signOut} className=\"is-primary\">\r\n          Sign Out\r\n        </Button>\r\n        <h1> USERS TABLE </h1>\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <td> Username </td>\r\n              <td> Name </td>\r\n              <td> Number </td>\r\n              <td> Email </td>\r\n              <td> Password </td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.users.map((user) => (\r\n              <tr key={user.id}>\r\n                <td> {user.username} </td>\r\n                <td> {user.name} </td>\r\n                <td> {user.number} </td>\r\n                <td> {user.email} </td>\r\n                <td> {user.password} </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setAuthenticated })(Home);\r\n","import React from \"react\";\r\nimport \"react-bulma-components/dist/react-bulma-components.min.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport CreateAccount from \"./CreateAccount\";\r\nimport SignIn from \"./SignIn\";\r\nimport Shop from \"./Shop\";\r\nimport Home from \"./Home\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { isAuthenticated: state.isAuthenticated };\r\n};\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidUpdate(prevProps, nextState) {}\r\n\r\n  componentDidMount() {\r\n    // Temporary\r\n    // To figure out env settings\r\n    console.log(\"deployment setting: \", process.env);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/sign-in\" exact component={() => <SignIn />} />\r\n\r\n            <Route path=\"/create-account\" component={() => <CreateAccount />} />\r\n\r\n            <Route\r\n              path=\"/home\"\r\n              component={() =>\r\n                this.props.isAuthenticated ? (\r\n                  <Home />\r\n                ) : (\r\n                  <Redirect to=\"/sign-in\" />\r\n                )\r\n              }\r\n            />\r\n\r\n            <Route\r\n              path=\"/shop\"\r\n              component={() =>\r\n                this.props.isAuthenticated ? (\r\n                  <Shop />\r\n                ) : (\r\n                  <Redirect to=\"/sign-in\" />\r\n                )\r\n              }\r\n            />\r\n\r\n            <Route\r\n              render={() => {\r\n                return this.props.isAuthenticated ? (\r\n                  <Redirect to=\"/home\" />\r\n                ) : (\r\n                  <Redirect to=\"/sign-in\" />\r\n                );\r\n              }}\r\n            />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(Main);\r\n","import { SET_AUTHENTICATE } from \"./actionTypes\";\r\nconst { createStore } = require(\"redux\");\r\n\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (error) {\r\n    console.log(error);\r\n    return undefined;\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n};\r\n\r\nconst myReducer = (state = initialState, action) => {\r\n  const newState = { ...state };\r\n\r\n  if (action.type === SET_AUTHENTICATE) {\r\n    newState.isAuthenticated = action.payload.isAuthenticated;\r\n  }\r\n\r\n  return newState;\r\n};\r\n\r\nconst persistedState = loadFromLocalStorage();\r\n\r\nconst store = createStore(\r\n  myReducer,\r\n  persistedState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n\r\nexport default store;\r\n","import \"./App.css\";\r\nimport Main from \"./components/Main\";\r\nimport \"react-app-polyfill/stable\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <Main />\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}